version: '3'

services:
  db:
    image: postgres:9.6@sha256:5beac0fe8a25cf68bb420c21fd8b213e346b9f8eaf3c7ff07bde1daa75289445
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 30
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

    # I don't think this healthcheck is ever used
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9200"]
        # # test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        # # test: ["CMD", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        # test: curl -f localhost:9200/_cluster/health || exit 100
        # # interval: 3s
        # interval: 10s
        # timeout: 30s
        # retries: 10

  # Web container is a prod-like fully-functioning container.
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - FRONTEND_SENTRY_PUBLIC_DSN
        - CI
    # This builds the tecken:build container
    image: buildhub:build
    env_file:
      - .env
    depends_on:
      - db
      - elasticsearch
    ports:
      - "8000:8000"
    environment:
      - DJANGO_CONFIGURATION
      - DATABASE_URL=postgresql://postgres@db/postgres
      - DJANGO_ES_URLS=http://elasticsearch:9200
      - DEVELOPMENT=1
    volumes:
      - $PWD:/app
    command: web-dev

  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    environment:
      - NODE_ENV=development
      - REACT_APP_KINTO_COLLECTION_URL=http://localhost:8000/api/
    ports:
      - "3000:3000"
      - "35729:35729"
    volumes:
      - $PWD/ui:/app
    command: start

volumes:
  esdata:
    driver: local
