version: '3'

services:
  db:
    image: postgres:9.6@sha256:5beac0fe8a25cf68bb420c21fd8b213e346b9f8eaf3c7ff07bde1daa75289445
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 30
  elasticsearch:
    # When you try to run Elasticsearch 6 inside some docker you run into this
    # error: "max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]"
    # It happens during bootstrapping. You can't run "sysctl -w vm.max_map_count=262144"
    # because the file system is read-only.
    # As a working compromise I've found that opting for
    # https://hub.docker.com/r/levlaz/elasticsearch-docker-ci/ which disabled
    # the bootstrap checks (see its README) you can at least start an Elasticsearch 5
    # server.
    # Ideally I would like this to match what we use in docker-compose.yml
    # image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    # See also
    # https://discuss.circleci.com/t/running-elasticsearch-5/8559?u=peterbe
    image: levlaz/elasticsearch-docker-ci:5.1.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200

  test:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - FRONTEND_SENTRY_PUBLIC_DSN
        - CI
    image: buildhub2
    depends_on:
      - db
      - elasticsearch
    environment:
      # This tells run.sh to wait for databases to be fully up.
      - DEVELOPMENT=1
      - DJANGO_CONFIGURATION=Test
      - DATABASE_URL=postgresql://postgres@db/postgres
      - DJANGO_ES_URLS=http://elasticsearch:9200
    command: test

  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    command: build

  docs:
    build:
      context: .
      dockerfile: docs/Dockerfile
    command: build
